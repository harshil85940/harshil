class doublylinklist:
  class _Node:
    def __init__(self,element,prev,next):
      self._element=element
      self._prev=prev
      self._next=next
      
  def __init__(self):
    self._head=self.Node(None,None,None)
    self._tail=self.Node(None,None,None)
    self._head._next=self._tail
    self._tail._prev=self._head
    self._size=0
    
  def __len__(self):
    return self._size
    
  def is_empty(self):
    return self._size == 0
    
  def add_first(self,e):
    newest = self._Node(e,None,None)
    if self.is_empty():
      self._head=newest
      self._tail=newest
    else:
      newest._next=self._head
      self._head._prev=newest
    self._head=newest
    self._size += 1
    
  def add_last(self,e):
    newest=self._Node(e,None,None)
    if self.is_empty():
      self._head=newest
      self._tail=newest
    else:
      self._tail._next=newest
      newest._prev=self._tail
    self._tail=newest
    self._size +=1
